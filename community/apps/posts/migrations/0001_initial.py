# Generated by Django 3.2.16 on 2023-11-08 12:33

import community.apps.posts.models.mixins.image
import community.bases.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('boards', '0002_initial'),
        ('badges', '0001_initial'),
        ('communities', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_active', models.BooleanField(blank=True, default=True, null=True, verbose_name='Is Active')),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True, verbose_name='Is Deleted')),
                ('deleted', models.DateTimeField(blank=True, null=True, verbose_name='Deleted')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('is_new_badge', models.BooleanField(default=False, verbose_name='Is New Badge')),
                ('is_nice_badge', models.BooleanField(default=False, verbose_name='Is Nice Badge')),
                ('is_good_badge', models.BooleanField(default=False, verbose_name='Is Good Badge')),
                ('is_excellent_badge', models.BooleanField(default=False, verbose_name='Is Excellent Badge')),
                ('is_great_badge', models.BooleanField(default=False, verbose_name='Is Great Badge')),
                ('is_wonderful_badge', models.BooleanField(default=False, verbose_name='Is Wonderful Badge')),
                ('is_fantastic_badge', models.BooleanField(default=False, verbose_name='Is Fantastic Badge')),
                ('is_amazing_badge', models.BooleanField(default=False, verbose_name='Is Amazing Badge')),
                ('is_best_live_badge', models.BooleanField(default=False, verbose_name='Is Best Live badge')),
                ('is_best_weekly_badge', models.BooleanField(default=False, verbose_name='Is Best Weekly Badge')),
                ('is_best_monthly_badge', models.BooleanField(default=False, verbose_name='Is Best Monthly Badge')),
                ('bookmark_count', models.IntegerField(default=0, verbose_name='Bookmark Count')),
                ('comment_count', models.IntegerField(default=0, verbose_name='Comment Count')),
                ('comments_like_count', models.IntegerField(default=0, verbose_name='Comments Like Count')),
                ('comments_dislike_count', models.IntegerField(default=0, verbose_name='Comments Dislike Count')),
                ('thumbnail_media_url', models.URLField(default=community.apps.posts.models.mixins.image.default_thumbnail_image_path, verbose_name='Thumbnail Media URL')),
                ('medias_data', models.JSONField(default=list, verbose_name='Medias Data')),
                ('total_like_count', models.IntegerField(default=0, verbose_name='Total Like Count')),
                ('like_count', models.IntegerField(default=0, verbose_name='Like Count')),
                ('fun_count', models.IntegerField(default=0, verbose_name='Fun Count')),
                ('healing_count', models.IntegerField(default=0, verbose_name='Healing Count')),
                ('legend_count', models.IntegerField(default=0, verbose_name='Legend Count')),
                ('useful_count', models.IntegerField(default=0, verbose_name='Useful Count')),
                ('empathy_count', models.IntegerField(default=0, verbose_name='Empathy Count')),
                ('devil_count', models.IntegerField(default=0, verbose_name='Devil Count')),
                ('dislike_count', models.IntegerField(default=0, verbose_name='Dislike Count')),
                ('point', models.IntegerField(default=0, verbose_name='Point')),
                ('visit_point', models.IntegerField(default=0, verbose_name='Visit Point')),
                ('comment_point', models.IntegerField(default=0, verbose_name='Comment Point')),
                ('bookmark_point', models.IntegerField(default=0, verbose_name='Bookmark Point')),
                ('like_point', models.IntegerField(default=0, verbose_name='Like Point')),
                ('dislike_point', models.IntegerField(default=0, verbose_name='Dislike Point')),
                ('rank', models.IntegerField(blank=True, null=True, verbose_name='Rank')),
                ('live_rank', models.IntegerField(blank=True, null=True, verbose_name='Live Rank')),
                ('rising_rank', models.IntegerField(blank=True, null=True, verbose_name='Rising Rank')),
                ('weekly_rank', models.IntegerField(blank=True, null=True, verbose_name='Weekly Rank')),
                ('monthly_rank', models.IntegerField(blank=True, null=True, verbose_name='Monthly Rank')),
                ('live_rank_change', models.IntegerField(blank=True, null=True, verbose_name='Live Rank Change')),
                ('rising_rank_change', models.IntegerField(blank=True, null=True, verbose_name='Rising Rank Change')),
                ('weekly_rank_change', models.IntegerField(blank=True, null=True, verbose_name='Weekly Rank Change')),
                ('monthly_rank_change', models.IntegerField(blank=True, null=True, verbose_name='Monthly Rank Change')),
                ('reported_count', models.IntegerField(default=0, verbose_name='Reported Count')),
                ('share_count', models.IntegerField(default=0, verbose_name='Share Count')),
                ('visit_count', models.IntegerField(default=0, verbose_name='Visit Count')),
                ('community_title', models.CharField(blank=True, max_length=60, null=True, verbose_name='Community Title')),
                ('board_group_title', models.CharField(blank=True, max_length=60, null=True, verbose_name='Board Group Title')),
                ('board_title', models.CharField(blank=True, max_length=60, null=True, verbose_name='Board Title')),
                ('read_permission', models.IntegerField(blank=True, null=True, verbose_name='Read Permission')),
                ('user_data', models.JSONField(blank=True, null=True, verbose_name='User Data')),
                ('profile_data', models.JSONField(blank=True, null=True, verbose_name='Profile Data')),
                ('title', models.CharField(blank=True, default='Untitled', max_length=100, null=True, verbose_name='Title')),
                ('content', models.TextField(blank=True, null=True, verbose_name='Content')),
                ('content_summary', models.TextField(blank=True, null=True, verbose_name='Content Summary')),
                ('public_type', models.CharField(choices=[('PUBLIC', 'PUBLIC'), ('FRIEND', 'FRIEND'), ('ONLY_ME', 'ONLY_ME')], default='PUBLIC', max_length=100, verbose_name='Public Type')),
                ('password', models.IntegerField(blank=True, null=True, verbose_name='Password')),
                ('reserved_at', models.DateTimeField(blank=True, null=True, verbose_name='Reserved At')),
                ('boomed_period', models.CharField(blank=True, choices=[('5', '5m'), ('30', '30m'), ('60', '1h'), ('360', '6h'), ('1440', '1d'), ('10080', '7d')], max_length=100, null=True, verbose_name='Boomed Period')),
                ('boomed_at', models.DateTimeField(blank=True, null=True, verbose_name='Boomed At')),
                ('web_url', models.URLField(blank=True, null=True, verbose_name='Web URL')),
                ('is_temporary', models.BooleanField(default=False, verbose_name='Is Temporary')),
                ('is_secret', models.BooleanField(default=False, verbose_name='Is Secret')),
                ('is_reserved', models.BooleanField(default=False, verbose_name='Is Reserved')),
                ('is_boomed', models.BooleanField(default=False, verbose_name='Is Boomed')),
                ('is_agenda', models.BooleanField(default=False, verbose_name='Is Agenda')),
                ('is_vote', models.BooleanField(default=False, verbose_name='Is Vote')),
                ('is_notice', models.BooleanField(default=False, verbose_name='Is Notice')),
                ('is_event', models.BooleanField(default=False, verbose_name='Is Event')),
                ('is_comment', models.BooleanField(default=True, verbose_name='Is Comment')),
                ('is_share', models.BooleanField(default=True, verbose_name='Is Share')),
                ('is_search', models.BooleanField(default=True, verbose_name='Is Search')),
                ('is_default', models.BooleanField(default=False, verbose_name='Is Default')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('achieved_20_points_at', models.DateTimeField(blank=True, null=True, verbose_name='Achieved 20 Points At')),
                ('badges', models.ManyToManyField(blank=True, related_name='posts', to='badges.Badge', verbose_name='Badge')),
                ('board', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to='boards.board', verbose_name='Board')),
                ('board_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to='boards.boardgroup', verbose_name='Board Group')),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='communities.community', verbose_name='Community')),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Post',
                'ordering': ['-created'],
            },
            bases=(community.bases.models.UpdateMixin, models.Model),
        ),
    ]
