# Generated by Django 3.2.16 on 2023-11-08 12:33

import community.apps.communities.models.mixins.image
import community.bases.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_active', models.BooleanField(blank=True, default=True, null=True, verbose_name='Is Active')),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True, verbose_name='Is Deleted')),
                ('deleted', models.DateTimeField(blank=True, null=True, verbose_name='Deleted')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('comment_count', models.IntegerField(default=0, verbose_name='Comment Count')),
                ('banner_image', models.ImageField(blank=True, null=True, upload_to=community.apps.communities.models.mixins.image.image_path, verbose_name='Banner Image')),
                ('banner_image_url', models.URLField(default=community.apps.communities.models.mixins.image.default_banner_image_path, verbose_name='Banner Image URL')),
                ('point', models.IntegerField(default=0, verbose_name='Point')),
                ('bookmark_point', models.IntegerField(default=0, verbose_name='Bookmark Point')),
                ('post_point', models.IntegerField(default=0, verbose_name='Post Point')),
                ('comment_point', models.IntegerField(default=0, verbose_name='Comment Point')),
                ('posts_like_point', models.IntegerField(default=0, verbose_name='Posts Like Point')),
                ('posts_dislike_point', models.IntegerField(default=0, verbose_name='Posts Dislike Point')),
                ('posts_visit_point', models.IntegerField(default=0, verbose_name='Posts Visit Point')),
                ('comments_like_point', models.IntegerField(default=0, verbose_name='Comments Like Point')),
                ('comments_dislike_point', models.IntegerField(default=0, verbose_name='Comments Dislike Point')),
                ('post_count', models.IntegerField(default=0, verbose_name='Post Count')),
                ('rank', models.IntegerField(blank=True, null=True, verbose_name='Rank')),
                ('live_rank', models.IntegerField(blank=True, null=True, verbose_name='Live Rank')),
                ('rising_rank', models.IntegerField(blank=True, null=True, verbose_name='Rising Rank')),
                ('weekly_rank', models.IntegerField(blank=True, null=True, verbose_name='Weekly Rank')),
                ('monthly_rank', models.IntegerField(blank=True, null=True, verbose_name='Monthly Rank')),
                ('live_rank_change', models.IntegerField(blank=True, null=True, verbose_name='Live Rank Change')),
                ('rising_rank_change', models.IntegerField(blank=True, null=True, verbose_name='Rising Rank Change')),
                ('weekly_rank_change', models.IntegerField(blank=True, null=True, verbose_name='Weekly Rank Change')),
                ('monthly_rank_change', models.IntegerField(blank=True, null=True, verbose_name='Monthly Rank Change')),
                ('visit_count', models.IntegerField(default=0, verbose_name='Visit Count')),
                ('posts_visit_count', models.IntegerField(default=0, verbose_name='Posts Visit Count')),
                ('posts_like_count', models.IntegerField(default=0, verbose_name='Posts Like Count')),
                ('posts_dislike_count', models.IntegerField(default=0, verbose_name='Posts Dislike Count')),
                ('comments_like_count', models.IntegerField(default=0, verbose_name='Comments Like Count')),
                ('comments_dislike_count', models.IntegerField(default=0, verbose_name='Comments Dislike Count')),
                ('title', models.CharField(max_length=30, verbose_name='Title')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='Description')),
                ('address', models.CharField(max_length=20, verbose_name='Address')),
                ('level', models.IntegerField(default=1, verbose_name='Level')),
                ('user_data', models.JSONField(blank=True, null=True, verbose_name='Master Data')),
                ('profile_data', models.JSONField(blank=True, null=True, verbose_name='Master Profile Data')),
                ('board_data', models.JSONField(blank=True, null=True, verbose_name='Board Data')),
                ('parent_community', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='communities', to='communities.community', verbose_name='Parent Community')),
            ],
            options={
                'verbose_name': 'Community',
                'verbose_name_plural': 'Community',
                'ordering': ['-created'],
            },
            bases=(community.bases.models.UpdateMixin, models.Model),
        ),
    ]
