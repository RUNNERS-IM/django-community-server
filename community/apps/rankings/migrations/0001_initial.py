# Generated by Django 3.2.16 on 2023-11-08 12:33

import community.bases.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('boards', '0002_initial'),
        ('posts', '0001_initial'),
        ('communities', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='RankingGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_active', models.BooleanField(blank=True, default=True, null=True, verbose_name='Is Active')),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True, verbose_name='Is Deleted')),
                ('deleted', models.DateTimeField(blank=True, null=True, verbose_name='Deleted')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('model_type', models.CharField(blank=True, choices=[('POST', '포스트')], max_length=100, null=True, verbose_name='Model Type')),
                ('ranking_type', models.CharField(blank=True, choices=[('LIVE', 'LIVE'), ('WEEKLY', 'WEEKLY'), ('MONTHLY', 'MONTHLY'), ('RISING', 'RISING')], max_length=100, null=True, verbose_name='Ranking Type')),
            ],
            options={
                'verbose_name': 'Ranking Group',
                'verbose_name_plural': 'Ranking Group',
                'ordering': ['-created'],
            },
            bases=(community.bases.models.UpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PostRanking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_active', models.BooleanField(blank=True, default=True, null=True, verbose_name='Is Active')),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True, verbose_name='Is Deleted')),
                ('deleted', models.DateTimeField(blank=True, null=True, verbose_name='Deleted')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('rank', models.IntegerField(default=0, verbose_name='Rank')),
                ('old_rank', models.IntegerField(default=0, verbose_name='Old Rank')),
                ('rank_change', models.IntegerField(default=0, verbose_name='Rank Change')),
                ('point_rank', models.IntegerField(default=0, verbose_name='Point Rank')),
                ('old_point_rank', models.IntegerField(default=0, verbose_name='Old Point Rank')),
                ('point_rank_change', models.IntegerField(default=0, verbose_name='Point Rank Change')),
                ('point', models.IntegerField(default=0, verbose_name='Point')),
                ('point_change', models.IntegerField(default=0, verbose_name='Point Change')),
                ('board', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='post_rankings', to='boards.board', verbose_name='Board')),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_rankings', to='communities.community', verbose_name='Community')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_rankings', to='posts.post', verbose_name='Post')),
                ('prev_ranking_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rankings.rankinggroup', verbose_name='Prev Ranking Group')),
                ('ranking_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_rankings', to='rankings.rankinggroup', verbose_name='Ranking Group')),
            ],
            options={
                'verbose_name': 'Post Ranking',
                'verbose_name_plural': 'Post Ranking',
                'ordering': ['-created'],
            },
            bases=(community.bases.models.UpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CommunityRanking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_active', models.BooleanField(blank=True, default=True, null=True, verbose_name='Is Active')),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True, verbose_name='Is Deleted')),
                ('deleted', models.DateTimeField(blank=True, null=True, verbose_name='Deleted')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('rank', models.IntegerField(default=0, verbose_name='Rank')),
                ('old_rank', models.IntegerField(default=0, verbose_name='Old Rank')),
                ('rank_change', models.IntegerField(default=0, verbose_name='Rank Change')),
                ('point_rank', models.IntegerField(default=0, verbose_name='Point Rank')),
                ('old_point_rank', models.IntegerField(default=0, verbose_name='Old Point Rank')),
                ('point_rank_change', models.IntegerField(default=0, verbose_name='Point Rank Change')),
                ('point_change', models.IntegerField(default=0, verbose_name='Point Change')),
                ('point', models.IntegerField(default=0, verbose_name='Point')),
                ('level', models.IntegerField(default=1, verbose_name='Level')),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_rankings', to='communities.community', verbose_name='Community')),
                ('prev_ranking_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rankings.rankinggroup', verbose_name='Prev Ranking Group')),
                ('ranking_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_rankings', to='rankings.rankinggroup', verbose_name='Ranking Group')),
            ],
            options={
                'verbose_name': 'Community Ranking',
                'verbose_name_plural': 'Community Ranking',
                'ordering': ['-created'],
            },
            bases=(community.bases.models.UpdateMixin, models.Model),
        ),
    ]
